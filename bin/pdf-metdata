#!/usr/bin/env python

# extracts author and title from the filename and updates the metadata of the PDF file with the extracted information
# pip install PyPDF2

import os
import sys
import re
from PyPDF2 import PdfReader, PdfWriter

def update_metadata(pdf_path, author, title):
    with open(pdf_path, 'rb') as pdf_file:
        pdf_reader = PdfReader(pdf_file)
        pdf_writer = PdfWriter()

        # Copy the content of the original PDF to the new PDF
        for page in pdf_reader.pages:
            pdf_writer.add_page(page)

        keywords = os.path.basename(os.path.dirname(pdf_path))

        pdf_writer.add_metadata(
            {
                "/Author": author,
                "/Title": title,
                "/Keywords": keywords,
            }
        )

        # Write the updated metadata to the new PDF
        with open(pdf_path, 'wb') as output_pdf:
            pdf_writer.write(output_pdf)

def extract_info_from_filename(filename):
    # Assuming the filename format is "<author> - <title>.pdf"
    match = re.match(r'^(.*?) - (.*?)\.pdf$', filename)
    if match:
        author, title = match.groups()
        return author, title
    else:
        print(f"Invalid filename format: {filename}")
        return None, None

def main():
    if len(sys.argv) < 2:
        print("Usage: python update_pdf_metadata.py <pdf_file1> <pdf_file2> ...")
        sys.exit(1)

    for pdf_file in sys.argv[1:]:
        if pdf_file.lower().endswith('.pdf'):
            author, title = extract_info_from_filename(os.path.basename(pdf_file))
            if author and title:
                update_metadata(pdf_file, author, title)
                #print(f"Metadata updated for {pdf_file}")
            else:
                print(f"Skipping {pdf_file} due to invalid filename format.")

if __name__ == "__main__":
    main()
